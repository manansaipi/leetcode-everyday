// URL : https://leetcode.com/problems/valid-sudoku/description/

/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
	let container = [];

	for (let i = 0; i < board.length; i++) {
		for (let y = 0; y < board[i].length; y++) {
			if (board[y][i] != ".") {
				if (container.includes(board[y][i])) {
					return false;
				} else {
					container.push(board[y][i]);
				}
			}
		}
		if (container.length == 0) {
			return false;
		}
		container = [];
	}
	return true;
};

console.log(
	isValidSudoku([
		["5", "3", ".", ".", "7", ".", ".", ".", "."],
		["6", ".", ".", "1", "9", "5", ".", ".", "."],
		[".", "9", "8", ".", ".", ".", ".", "6", "."],
		["8", ".", ".", ".", "6", ".", ".", ".", "3"],
		["4", ".", ".", "8", ".", "3", ".", ".", "1"],
		["7", ".", ".", ".", "2", ".", ".", ".", "6"],
		[".", "6", ".", ".", ".", ".", "2", "8", "."],
		[".", ".", ".", "4", "1", "9", ".", ".", "5"],
		[".", ".", ".", ".", "8", ".", ".", "7", "9"],
	])
);

console.log(
	isValidSudoku([
		["7", ".", ".", ".", "4", ".", ".", ".", "."],
		[".", ".", ".", "8", "6", "5", ".", ".", "."],
		[".", "1", ".", "2", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", "9", ".", ".", "."],
		[".", ".", ".", ".", "5", ".", "5", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", "2", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
	])
);

console.log(
	isValidSudoku([
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
	])
);
