// URL : https://leetcode.com/problems/valid-sudoku/description/

/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
	for (let i = 0; i < 9; i++) {
		let rowSet = new Set();
		let colSet = new Set();
		let gridSet = new Set();

		for (let j = 0; j < 9; j++) {
			// Check rows
			if (board[i][j] !== "." && rowSet.has(board[i][j])) {
				return false;
			}
			rowSet.add(board[i][j]);

			// Check columns
			if (board[j][i] !== "." && colSet.has(board[j][i])) {
				return false;
			}
			colSet.add(board[j][i]);

			// Check subgrids
			let row = 3 * Math.floor(i / 3) + Math.floor(j / 3);
			let col = 3 * (i % 3) + (j % 3);
			if (board[row][col] !== "." && gridSet.has(board[row][col])) {
				return false;
			}
			gridSet.add(board[row][col]);
		}
	}
	return true;
};

console.log(
	isValidSudoku([
		["5", "3", ".", ".", "7", ".", ".", ".", "."],
		["6", ".", ".", "1", "9", "5", ".", ".", "."],
		[".", "9", "8", ".", ".", ".", ".", "6", "."],
		["8", ".", ".", ".", "6", ".", ".", ".", "3"],
		["4", ".", ".", "8", ".", "3", ".", ".", "1"],
		["7", ".", ".", ".", "2", ".", ".", ".", "6"],
		[".", "6", ".", ".", ".", ".", "2", "8", "."],
		[".", ".", ".", "4", "1", "9", ".", ".", "5"],
		[".", ".", ".", ".", "8", ".", ".", "7", "9"],
	])
);

console.log(
	isValidSudoku([
		["7", ".", ".", ".", "4", ".", ".", ".", "."],
		[".", ".", ".", "8", "6", "5", ".", ".", "."],
		[".", "1", ".", "2", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", "9", ".", ".", "."],
		[".", ".", ".", ".", "5", ".", "5", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", "2", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
	])
);

console.log(
	isValidSudoku([
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
		[".", ".", ".", ".", ".", ".", ".", ".", "."],
	])
);
